apply plugin: 'com.android.application'

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    signingConfigs {
        release {

            // 加载资源
            Properties properties = new Properties()
            InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
            properties.load(inputStream)

            // 读取文件
            def keystoreFilepath = properties.getProperty('keystore.path')
            def keyFile  = file(keystoreFilepath)

            // 读取字段
            def keystoreAlias = properties.getProperty('keystore.alias')
            def keystoreAliasPw = properties.getProperty('keystore.alias_password')
            def keystorePw  = properties.getProperty('keystore.password')

            keyAlias keystoreAlias
            keyPassword keystoreAliasPw
            storeFile keyFile
            storePassword keystorePw
        }
    }

    defaultConfig {
        applicationId "com.arch.eric"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Basic Core Library
    implementation project(':basicore')

    // Architecture components
//    implementation deps.lifecycle.extensions
//    annotationProcessor deps.lifecycle.compiler
    implementation deps.room.runtime
    annotationProcessor deps.room.compiler

    // Support Library
    implementation deps.support.app_compat
    implementation deps.support.design
    implementation deps.constraint_layout
    implementation deps.support.cardview
    implementation deps.support.v4

    // Retrofit2 & Rxjava2 & Gson
//    implementation deps.retrofit.runtime
//    implementation deps.retrofit.rxjava2
//    implementation deps.retrofit.gson
//    implementation deps.rxjava2

    // Glide
//    implementation deps.glide.runtime
//    annotationProcessor deps.glide.compiler
//    implementation deps.glide.okhttp3

//    implementation deps.butterknife.runtime
    annotationProcessor deps.butterknife.compiler

    // Test Library
    testImplementation deps.junit
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.espresso.core
}
